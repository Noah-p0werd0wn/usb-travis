//! Where to begin and how to get started writing your new libusbK based application.
/*!

\page usbk_usage Using the Library

<TABLE>
	<TR><TH colspan=2>This library is divided into the following sections</TH></TR>
	<TR><TD>\ref libk (\b LibK)</TD><TD>\copybrief libk</TD></TR>
	<TR><TD>\ref usbk (\b UsbK)</TD><TD>\copybrief usbk</TD></TR>
	<TR><TD>\ref lstk (\b LstK)</TD><TD>\copybrief lstk</TD></TR>
	<TR><TD>\ref ovlk (\b OvlK)</TD><TD>\copybrief ovlk</TD></TR>
	<TR><TD>\ref hotk (\b HotK)</TD><TD>\copybrief hotk</TD></TR>
	<TR><TD>\ref stmk (\b StmK)</TD><TD>\copybrief stmk</TD></TR>
	<TR><TD>\ref isok (\b IsoK)</TD><TD>\copybrief isok</TD></TR>
</TABLE>
  
<H2>Getting Started</H2>

\note
Before you begin, connect your device and use the \b kList test application to verify one of the
\ref usbk_drivers has been properly installed. If kList cannot find your device then refer back to
\ref usbk_installing.

There are several examples to help along the way, but the following are meant for user new to the library.
These examples show basic library functionality like finding and opening a device:
-# \b show-device.c
-# \b open-device.c
-# \b load-driver-api.c

<HR>

<B>Writing the code:</B><BR>
-# Init and Free
   - All modules except \ref isok implement an \b Init and a \b Free function for creating and and detroying a
     handle specific to the module.
-# Handles
   - Each \ref KLIB_HANDLE implements a user assignable cleanup callback function and a user context pointer.
     See \ref LibK_SetCleanupCallback, \ref LibK_SetContext, \ref LibK_GetContext.
-# Function Returns
   - Nearly all function have a \c BOOL return type. If a function does not complete as expected it returns
     FALSE (0). To get extended error information, the user must call the \c GetLastError() Windows API
     function. These are very generalized errors, the Windows API/MSDN provides ways to lookup error strings
     for the extended error number but is advisable not to use them! Instead refer to this documentation
     under the function that caused the error.

<HR>

<B>Building the examples:</B><BR>
-# Examples should be built from the dev-kit package. If you have not allready downloaded it, get it now.
-# Choose your compiler/IDE:
   - <B>VStudio 2008</B>: Each example has a project file. All examples are contained within an examples solution.
   - <B>WDK</B>: Each example has a WDK sources file. You can use standard WDK building conventions to build all or a
     single example.
     - Get and install \wdk.
     - Open a build environment command prompt
     - Navigate to the \b examples folder to build all or the examples project to build one.
     - Execute: <B>build /cegZ</B>
   - <B>Mingw64</B>: Each example has a Mingw64 build script for 32bit or 64bit GCC builds. All examples are
     contained in a single solution-like build script which can be used to build all or any of the examples.
     - Get and install <A href="http://tdm-gcc.tdragon.net/download">TDM64-GCC</A>
     - Open a Mingw64 build command prompt.
     - Navigate to the \b examples folder and execute make:
	   - Mingw64 project make syntax: <PRE>make [arch=amd64/x86] [Example name]</PRE>
	   - Mingw64 solution make syntax: <PRE>make [all/multi-all]</PRE>
	   - <B>make</B> builds all 32bit examples.
	   - <B>make arch=amd64</B> builds all 64bit examples.
	   - <B>make show-device</B> builds the 32bit show-device example.
	   - <B>make multi-all</B> builds all 32bit and 64bit examples.  

<HR>

<B>Running the examples:</B><BR>

\note
The output EXEs will be placed in different locations depending on the compiler/IDE used.  Generally they
are placed in compiler/IDE default locations.

\attention
Most examples are meant to be modifed prior to use.  It is not advisabe to run these examples as-is before
reviewing the example code. The one exception is if your device is an official Benchmark USB Device.


\htmlonly
<P>&nbsp;</P><P>&nbsp;</P><P>&nbsp;</P><P>&nbsp;</P><P>&nbsp;</P><P>&nbsp;</P><P>&nbsp;</P><P>&nbsp;</P>
\endhtmlonly

*/
